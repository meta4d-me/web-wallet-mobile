/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleM4mNFTV2,
  SimpleM4mNFTV2Interface,
} from "../SimpleM4mNFTV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIndex",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "safeMintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d3e38038062001d3e8339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000288565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b602082108114156200028257634e487b7160e01b600052602260045260246000fd5b50919050565b611aa680620002986000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063ac8d856c1161007c578063ac8d856c14610278578063b88d4fde146102a1578063c87b56dd146102b4578063e67e402c146102c7578063e985e9c5146102da578063f626cf2c1461031657600080fd5b80636352211e1461022a57806370a082311461023d5780637e4831d31461025057806395d89b411461025d578063a22cb4651461026557600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806342842e0e146101f15780634f6ccce71461020457806354948a251461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a3660046113c2565b610329565b60405190151581526020015b60405180910390f35b61016c610354565b60405161015b9190611433565b61018c610187366004611446565b6103e6565b6040516001600160a01b03909116815260200161015b565b6101b76101b236600461147b565b61040d565b005b6008545b60405190815260200161015b565b6101b76101d93660046114a5565b610528565b6101bd6101ec36600461147b565b610559565b6101b76101ff3660046114a5565b6105ef565b6101bd610212366004611446565b61060a565b6101b76102253660046115a0565b61069d565b61018c610238366004611446565b6106e5565b6101bd61024b36600461167b565b610745565b600a5461014f9060ff1681565b61016c6107cb565b6101b7610273366004611696565b6107da565b61018c610286366004611446565b600c602052600090815260409020546001600160a01b031681565b6101b76102af3660046116d2565b6107e9565b61016c6102c2366004611446565b61081b565b6101b76102d536600461174e565b610856565b61014f6102e836600461179b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b761032436600461174e565b6108f9565b60006001600160e01b0319821663780e9d6360e01b148061034e575061034e82610959565b92915050565b606060008054610363906117ce565b80601f016020809104026020016040519081016040528092919081815260200182805461038f906117ce565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b60006103f1826109a9565b506000908152600460205260409020546001600160a01b031690565b6000610418826106e5565b9050806001600160a01b0316836001600160a01b0316141561048b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a757506104a781336102e8565b6105195760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610482565b6105238383610a0b565b505050565b6105323382610a79565b61054e5760405162461bcd60e51b815260040161048290611809565b610523838383610af8565b600061056483610745565b82106105c65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610482565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610523838383604051806020016040528060008152506107e9565b600061061560085490565b82106106785760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610482565b6008828154811061068b5761068b611856565b90600052602060002001549050919050565b60005b83518110156106df576106cd8482815181106106be576106be611856565b602002602001015184846108f9565b806106d781611882565b9150506106a0565b50505050565b6000818152600260205260408120546001600160a01b03168061034e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610482565b60006001600160a01b0382166107af5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610482565b506001600160a01b031660009081526003602052604090205490565b606060018054610363906117ce565b6107e5338383610c69565b5050565b6107f33383610a79565b61080f5760405162461bcd60e51b815260040161048290611809565b6106df84848484610d38565b6060600b6000838152602001908152602001600020604051602001610840919061189d565b6040516020818303038152906040529050919050565b6000838152600c602052604090205483906001600160a01b0316156108ac5760405162461bcd60e51b815260206004820152600c60248201526b1d1bdad95b9259081d5cd95960a21b6044820152606401610482565b6108b68385610d6b565b6000848152600b6020908152604090912083516108d592850190611313565b505050600091825250600c6020526040902080546001600160a01b03191633179055565b6000838152600c602052604090205483906001600160a01b03161561094f5760405162461bcd60e51b815260206004820152600c60248201526b1d1bdad95b9259081d5cd95960a21b6044820152606401610482565b6108b68385610f04565b60006001600160e01b031982166380ac58cd60e01b148061098a57506001600160e01b03198216635b5e139f60e01b145b8061034e57506301ffc9a760e01b6001600160e01b031983161461034e565b6000818152600260205260409020546001600160a01b0316610a085760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610482565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a40826106e5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a85836106e5565b9050806001600160a01b0316846001600160a01b03161480610acc57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610af05750836001600160a01b0316610ae5846103e6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b0b826106e5565b6001600160a01b031614610b315760405162461bcd60e51b815260040161048290611952565b6001600160a01b038216610b935760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610482565b610ba08383836001610f1e565b826001600160a01b0316610bb3826106e5565b6001600160a01b031614610bd95760405162461bcd60e51b815260040161048290611952565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610ccb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610482565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d43848484610af8565b610d4f84848484611052565b6106df5760405162461bcd60e51b815260040161048290611997565b6001600160a01b038216610dc15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610482565b6000818152600260205260409020546001600160a01b031615610e265760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610482565b610e34600083836001610f1e565b6000818152600260205260409020546001600160a01b031615610e995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610482565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6107e5828260405180602001604052806000815250611150565b6001811115610f8d5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610482565b816001600160a01b038516610fe957610fe481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61100c565b836001600160a01b0316856001600160a01b03161461100c5761100c8582611183565b6001600160a01b0384166110285761102381611220565b61104b565b846001600160a01b0316846001600160a01b03161461104b5761104b84826112cf565b5050505050565b60006001600160a01b0384163b1561114557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110969033908990889088906004016119e9565b6020604051808303816000875af19250505080156110d1575060408051601f3d908101601f191682019092526110ce91810190611a26565b60015b61112b573d8080156110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b5080516111235760405162461bcd60e51b815260040161048290611997565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610af0565b506001949350505050565b61115a8383610d6b565b6111676000848484611052565b6105235760405162461bcd60e51b815260040161048290611997565b6000600161119084610745565b61119a9190611a43565b6000838152600760205260409020549091508082146111ed576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061123290600190611a43565b6000838152600960205260408120546008805493945090928490811061125a5761125a611856565b90600052602060002001549050806008838154811061127b5761127b611856565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806112b3576112b3611a5a565b6001900381819060005260206000200160009055905550505050565b60006112da83610745565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461131f906117ce565b90600052602060002090601f0160209004810192826113415760008555611387565b82601f1061135a57805160ff1916838001178555611387565b82800160010185558215611387579182015b8281111561138757825182559160200191906001019061136c565b50611393929150611397565b5090565b5b808211156113935760008155600101611398565b6001600160e01b031981168114610a0857600080fd5b6000602082840312156113d457600080fd5b81356113df816113ac565b9392505050565b6000815180845260005b8181101561140c576020818501810151868301820152016113f0565b8181111561141e576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006113df60208301846113e6565b60006020828403121561145857600080fd5b5035919050565b80356001600160a01b038116811461147657600080fd5b919050565b6000806040838503121561148e57600080fd5b6114978361145f565b946020939093013593505050565b6000806000606084860312156114ba57600080fd5b6114c38461145f565b92506114d16020850161145f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611520576115206114e1565b604052919050565b600067ffffffffffffffff831115611542576115426114e1565b611555601f8401601f19166020016114f7565b905082815283838301111561156957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261159157600080fd5b6113df83833560208501611528565b6000806000606084860312156115b557600080fd5b833567ffffffffffffffff808211156115cd57600080fd5b818601915086601f8301126115e157600080fd5b81356020828211156115f5576115f56114e1565b8160051b6116048282016114f7565b928352848101820192828101908b85111561161e57600080fd5b958301955b8487101561163c57863582529583019590830190611623565b985061164c91505088820161145f565b95505050604086013591508082111561166457600080fd5b5061167186828701611580565b9150509250925092565b60006020828403121561168d57600080fd5b6113df8261145f565b600080604083850312156116a957600080fd5b6116b28361145f565b9150602083013580151581146116c757600080fd5b809150509250929050565b600080600080608085870312156116e857600080fd5b6116f18561145f565b93506116ff6020860161145f565b925060408501359150606085013567ffffffffffffffff81111561172257600080fd5b8501601f8101871361173357600080fd5b61174287823560208401611528565b91505092959194509250565b60008060006060848603121561176357600080fd5b833592506117736020850161145f565b9150604084013567ffffffffffffffff81111561178f57600080fd5b61167186828701611580565b600080604083850312156117ae57600080fd5b6117b78361145f565b91506117c56020840161145f565b90509250929050565b600181811c908216806117e257607f821691505b6020821081141561180357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118965761189661186c565b5060010190565b66697066733a2f2f60c81b8152600060076000845481600182811c9150808316806118c957607f831692505b60208084108214156118e957634e487b7160e01b86526022600452602486fd5b8180156118fd576001811461191257611943565b60ff1986168a890152848a0188019650611943565b60008b81526020902060005b868110156119395781548c82018b015290850190830161191e565b505087858b010196505b50949998505050505050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a1c908301846113e6565b9695505050505050565b600060208284031215611a3857600080fd5b81516113df816113ac565b600082821015611a5557611a5561186c565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200bbb8ab86cf9d66072296d936a88028832fa9f224dc906bf828e08abce13343b64736f6c634300080c0033";

type SimpleM4mNFTV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleM4mNFTV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleM4mNFTV2__factory extends ContractFactory {
  constructor(...args: SimpleM4mNFTV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SimpleM4mNFTV2";
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleM4mNFTV2> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<SimpleM4mNFTV2>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): SimpleM4mNFTV2 {
    return super.attach(address) as SimpleM4mNFTV2;
  }
  connect(signer: Signer): SimpleM4mNFTV2__factory {
    return super.connect(signer) as SimpleM4mNFTV2__factory;
  }
  static readonly contractName: "SimpleM4mNFTV2";
  public readonly contractName: "SimpleM4mNFTV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleM4mNFTV2Interface {
    return new utils.Interface(_abi) as SimpleM4mNFTV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleM4mNFTV2 {
    return new Contract(address, _abi, signerOrProvider) as SimpleM4mNFTV2;
  }
}
