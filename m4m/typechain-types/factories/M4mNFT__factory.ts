/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { M4mNFT, M4mNFTInterface } from "../M4mNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80634f6ccce7116100b8578063931688cb1161007c578063931688cb1461028957806395d89b411461029c578063a22cb465146102a4578063b88d4fde146102b7578063c87b56dd146102ca578063e985e9c5146102dd57600080fd5b80634f6ccce71461022a5780636352211e1461023d57806370a08231146102505780637ab4339d146102635780637b1039991461027657600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806340c10f19146101f157806342842e0e1461020457806342966c681461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a366004611ad2565b610319565b60405190151581526020015b60405180910390f35b61016c610344565b60405161015b9190611b47565b61018c610187366004611b5a565b6103d6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611b88565b6103fd565b005b6099545b60405190815260200161015b565b6101b76101d9366004611bb4565b610518565b6101bd6101ec366004611b88565b610549565b6101b76101ff366004611b88565b6105df565b6101b7610212366004611bb4565b610636565b6101b7610225366004611b5a565b610651565b6101bd610238366004611b5a565b6106a6565b61018c61024b366004611b5a565b610739565b6101bd61025e366004611bf5565b610799565b6101b7610271366004611cbe565b61081f565b60ca5461018c906001600160a01b031681565b6101b7610297366004611d10565b610960565b61016c610973565b6101b76102b2366004611d45565b610982565b6101b76102c5366004611d78565b61098d565b61016c6102d8366004611b5a565b6109c5565b61014f6102eb366004611df8565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b148061033e575061033e82610a2c565b92915050565b60606065805461035390611e26565b80601f016020809104026020016040519081016040528092919081815260200182805461037f90611e26565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b60006103e182610a7c565b506000908152606960205260409020546001600160a01b031690565b600061040882610739565b9050806001600160a01b0316836001600160a01b0316141561047b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610497575061049781336102eb565b6105095760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610472565b6105138383610adb565b505050565b6105223382610b49565b61053e5760405162461bcd60e51b815260040161047290611e61565b610513838383610bc8565b600061055483610799565b82106105b65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610472565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b60ca546001600160a01b031633146106285760405162461bcd60e51b815260206004820152600c60248201526b696c6c20726567697374727960a01b6044820152606401610472565b6106328282610d39565b5050565b6105138383836040518060200160405280600081525061098d565b60ca546001600160a01b0316331461069a5760405162461bcd60e51b815260206004820152600c60248201526b696c6c20726567697374727960a01b6044820152606401610472565b6106a381610d53565b50565b60006106b160995490565b82106107145760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610472565b6099828154811061072757610727611eae565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b03168061033e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610472565b60006001600160a01b0382166108035760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610472565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff161580801561083f5750600054600160ff909116105b806108595750303b158015610859575060005460ff166001145b6108bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610472565b6000805460ff1916600117905580156108df576000805461ff0019166101001790555b6108e7610df6565b82516108fa9060c9906020860190611a23565b5060ca80546001600160a01b0319166001600160a01b0384161790558015610513576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b80516106329060c9906020840190611a23565b60606066805461035390611e26565b610632338383610e63565b6109973383610b49565b6109b35760405162461bcd60e51b815260040161047290611e61565b6109bf84848484610f32565b50505050565b60606109d082610a7c565b60006109da610f65565b905060008151116109fa5760405180602001604052806000815250610a25565b80610a0484610f97565b604051602001610a15929190611ee0565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610a5d57506001600160e01b03198216635b5e139f60e01b145b8061033e57506301ffc9a760e01b6001600160e01b031983161461033e565b6000818152606760205260409020546001600160a01b03166106a35760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610472565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b1082610739565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b5583610739565b9050806001600160a01b0316846001600160a01b03161480610b9c57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610bc05750836001600160a01b0316610bb5846103d6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bdb82610739565b6001600160a01b031614610c015760405162461bcd60e51b815260040161047290611f0f565b6001600160a01b038216610c635760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610472565b610c708383836001611034565b826001600160a01b0316610c8382610739565b6001600160a01b031614610ca95760405162461bcd60e51b815260040161047290611f0f565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610632828260405180602001604052806000815250611113565b6000610d5e82610739565b9050610d6e816000846001611034565b610d7782610739565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff16610e615760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610472565b565b816001600160a01b0316836001600160a01b03161415610ec55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610472565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f3d848484610bc8565b610f4984848484611146565b6109bf5760405162461bcd60e51b815260040161047290611f54565b606060c9610f7230611244565b604051602001610f83929190611fa6565b604051602081830303815290604052905090565b60606000610fa48361125b565b600101905060008167ffffffffffffffff811115610fc457610fc4611c12565b6040519080825280601f01601f191660200182016040528015610fee576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110275761102c565b610ff8565b509392505050565b61104084848484611333565b60ca546040516323c1f0ad60e21b8152600481018490526000916001600160a01b031690638f07c2b490602401608060405180830381865afa15801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae919061205d565b50919250600291506110bd9050565b8160038111156110cf576110cf6120aa565b141561110c5760405162461bcd60e51b815260206004820152600c60248201526b1d1bdad95b881b1bd8dad95960a21b6044820152606401610472565b5050505050565b61111d838361146c565b61112a6000848484611146565b6105135760405162461bcd60e51b815260040161047290611f54565b60006001600160a01b0384163b1561123957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061118a9033908990889088906004016120c0565b6020604051808303816000875af19250505080156111c5575060408051601f3d908101601f191682019092526111c2918101906120fd565b60015b61121f573d8080156111f3576040519150601f19603f3d011682016040523d82523d6000602084013e6111f8565b606091505b5080516112175760405162461bcd60e51b815260040161047290611f54565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bc0565b506001949350505050565b606061033e8261125384611605565b60010161166f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061129a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112c6576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112e457662386f26fc10000830492506010015b6305f5e10083106112fc576305f5e100830492506008015b612710831061131057612710830492506004015b60648310611322576064830492506002015b600a831061033e5760010192915050565b61133f8484848461180b565b60018111156113ae5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610472565b816001600160a01b03851661140a5761140581609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61142d565b836001600160a01b0316856001600160a01b03161461142d5761142d8582611893565b6001600160a01b0384166114495761144481611930565b61110c565b846001600160a01b0316846001600160a01b03161461110c5761110c84826119df565b6001600160a01b0382166114c25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610472565b6000818152606760205260409020546001600160a01b0316156115275760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610472565b611535600083836001611034565b6000818152606760205260409020546001600160a01b03161561159a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610472565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080608083901c1561161d5760809290921c916010015b604083901c156116325760409290921c916008015b602083901c156116475760209290921c916004015b601083901c1561165c5760109290921c916002015b600883901c1561033e5760010192915050565b6060600061167e836002612130565b61168990600261214f565b67ffffffffffffffff8111156116a1576116a1611c12565b6040519080825280601f01601f1916602001820160405280156116cb576020820181803683370190505b509050600360fc1b816000815181106116e6576116e6611eae565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061171557611715611eae565b60200101906001600160f81b031916908160001a9053506000611739846002612130565b61174490600161214f565b90505b60018111156117bc576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061177857611778611eae565b1a60f81b82828151811061178e5761178e611eae565b60200101906001600160f81b031916908160001a90535060049490941c936117b581612167565b9050611747565b508315610a255760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610472565b60018111156109bf576001600160a01b03841615611851576001600160a01b0384166000908152606860205260408120805483929061184b90849061217e565b90915550505b6001600160a01b038316156109bf576001600160a01b0383166000908152606860205260408120805483929061188890849061214f565b909155505050505050565b600060016118a084610799565b6118aa919061217e565b6000838152609860205260409020549091508082146118fd576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b6099546000906119429060019061217e565b6000838152609a60205260408120546099805493945090928490811061196a5761196a611eae565b90600052602060002001549050806099838154811061198b5761198b611eae565b6000918252602080832090910192909255828152609a909152604080822084905585825281205560998054806119c3576119c3612195565b6001900381819060005260206000200160009055905550505050565b60006119ea83610799565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611a2f90611e26565b90600052602060002090601f016020900481019282611a515760008555611a97565b82601f10611a6a57805160ff1916838001178555611a97565b82800160010185558215611a97579182015b82811115611a97578251825591602001919060010190611a7c565b50611aa3929150611aa7565b5090565b5b80821115611aa35760008155600101611aa8565b6001600160e01b0319811681146106a357600080fd5b600060208284031215611ae457600080fd5b8135610a2581611abc565b60005b83811015611b0a578181015183820152602001611af2565b838111156109bf5750506000910152565b60008151808452611b33816020860160208601611aef565b601f01601f19169290920160200192915050565b602081526000610a256020830184611b1b565b600060208284031215611b6c57600080fd5b5035919050565b6001600160a01b03811681146106a357600080fd5b60008060408385031215611b9b57600080fd5b8235611ba681611b73565b946020939093013593505050565b600080600060608486031215611bc957600080fd5b8335611bd481611b73565b92506020840135611be481611b73565b929592945050506040919091013590565b600060208284031215611c0757600080fd5b8135610a2581611b73565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611c4357611c43611c12565b604051601f8501601f19908116603f01168101908282118183101715611c6b57611c6b611c12565b81604052809350858152868686011115611c8457600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611caf57600080fd5b610a2583833560208501611c28565b60008060408385031215611cd157600080fd5b823567ffffffffffffffff811115611ce857600080fd5b611cf485828601611c9e565b9250506020830135611d0581611b73565b809150509250929050565b600060208284031215611d2257600080fd5b813567ffffffffffffffff811115611d3957600080fd5b610bc084828501611c9e565b60008060408385031215611d5857600080fd5b8235611d6381611b73565b915060208301358015158114611d0557600080fd5b60008060008060808587031215611d8e57600080fd5b8435611d9981611b73565b93506020850135611da981611b73565b925060408501359150606085013567ffffffffffffffff811115611dcc57600080fd5b8501601f81018713611ddd57600080fd5b611dec87823560208401611c28565b91505092959194509250565b60008060408385031215611e0b57600080fd5b8235611e1681611b73565b91506020830135611d0581611b73565b600181811c90821680611e3a57607f821691505b60208210811415611e5b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008151611ed6818560208601611aef565b9290920192915050565b60008351611ef2818460208801611aef565b835190830190611f06818360208801611aef565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600080845481600182811c915080831680611fc257607f831692505b6020808410821415611fe257634e487b7160e01b86526022600452602486fd5b818015611ff6576001811461200757612034565b60ff19861689528489019650612034565b60008b81526020902060005b8681101561202c5781548b820152908501908301612013565b505084890196505b5050505050506120546120478286611ec4565b602f60f81b815260010190565b95945050505050565b6000806000806080858703121561207357600080fd5b84516004811061208257600080fd5b60208601516040870151919550935061209a81611b73565b6060959095015193969295505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120f390830184611b1b565b9695505050505050565b60006020828403121561210f57600080fd5b8151610a2581611abc565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561214a5761214a61211a565b500290565b600082198211156121625761216261211a565b500190565b6000816121765761217661211a565b506000190190565b6000828210156121905761219061211a565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b1a77879843327dd82da4f4cb49ae7dd46158824ead4b107e379729e34d3387364736f6c634300080c0033";

type M4mNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: M4mNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class M4mNFT__factory extends ContractFactory {
  constructor(...args: M4mNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "M4mNFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<M4mNFT> {
    return super.deploy(overrides || {}) as Promise<M4mNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): M4mNFT {
    return super.attach(address) as M4mNFT;
  }
  connect(signer: Signer): M4mNFT__factory {
    return super.connect(signer) as M4mNFT__factory;
  }
  static readonly contractName: "M4mNFT";
  public readonly contractName: "M4mNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): M4mNFTInterface {
    return new utils.Interface(_abi) as M4mNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): M4mNFT {
    return new Contract(address, _abi, signerOrProvider) as M4mNFT;
  }
}
